# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: server
    main: ./cmd/server
    binary: "{{ .ProjectName }}_{{ .Version }}_linux_{{ .Arch }}"
    goos:
      - linux
    goarch:
      - amd64

archives:
  - id: default
    builds: [server]
    format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    files:
      # Include the systemd service file in the tarball
      - systemd/{{ .ProjectName }}.service

nfpms:
  - id: deb
    formats:
      - deb
    description: "A scan server for your documents"
    maintainer: "dominik@schidlowski.eu"
    vendor: "Dominik Schidlowski"
    homepage: ""
    license: "MIT"
    contents:
      - src: "dist/server_linux_amd64_v1/{{ .ProjectName }}_{{ .Version }}_linux_{{ .Arch }}"
        dst: "/usr/bin/{{ .ProjectName}}"
      - src: "systemd/{{ .ProjectName }}.service"
        dst: "/etc/systemd/system/{{ .ProjectName }}.service"
    # Optionally, add post-install scripts to enable and start systemd service
    # scripts:
    #   postinstall: |
    #     systemctl enable {{ .ProjectName }}
    #     systemctl start {{ .ProjectName }}

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
